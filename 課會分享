https://github.com/langchain-ai/langchain-mcp-adapters

📘 AI MCP project 把現有的AI產品融入MCP

📘 MCP 是什麼？為什麼大型語言模型需要它？

MCP（Model Context Protocol）是一套專為大型語言模型（LLM）設計的開放式通訊協定，用來標準化模型與外部資源的互動方式。它規範了 LLM 如何查詢、調用及整合各種外部工具、提示（prompt templates）與資源（如檔案、圖片），並為這些資源建立一致的描述格式與資料結構。

藉由 MCP，開發者可以將功能元件（例如計算器、天氣查詢 API、資料庫查詢系統）包裝成結構化、可理解的工具模組，讓模型能自動解析其功能與參數要求，並在需要時主動選擇與調用。這種一致化與模組化的設計，大幅提升了 LLM 作為智慧代理人（Agent）的實用性、彈性與可擴展性。


📘舉例說明
Cline 是一個支援 MCP 協議的 VS Code 插件，作為 MCP 在 VS Code 環境中的實用範例，讓大型語言模型（如 ChatGPT、Claude）能夠自動調用各種工具、存取資料、讀取檔案並執行自動化操作，實現真正「能做事」的智能代理功能。

運作流程：
使用者透過 Cline 在 VS Code 下 prompt 指令
LLM 接收後判斷是否需要使用工具
若需要，LLM 透過 MCP 自動探測可用工具
Cline 呼叫相應的 MCP Server
MCP Server 執行任務並將結果回傳給模型
模型整合輸出，最終在 VS Code 中展示結果

📘什麼是 LangChain？
LangChain 是一個開源的應用框架，專為大型語言模型（LLM）設計，目的是幫助開發者快速打造具備推理能力、記憶機制、工具調用能力與多步驟思考流程的智慧系統。

它讓原本只能聊天的語言模型，進一步具備「整合外部工具、存取資料、保留上下文記憶」的能力，從而實現真正能「思考與完成任務」的 AI 代理人（AI agents）與複雜應用（如多輪問答系統、自動化流程助手等）。


📘LangChain 是框架，MCP 是標準；LangChain 幫你建構 Agent 系統，而 MCP 提供統一、模組化的工具與資源接口，讓這個系統能穩定運作並容易擴展。
